#include <stdio.h>
#include <stdlib.h>
#include <signal.h>
#include <string.h>
#include <sys/time.h>

struct node_st {
  int data; 
  struct node_st *next; 
};

struct node_st *sorted_insert_node(struct node_st *l, int num)
{
  struct node_st* current;
  struct node_st* new_node = NULL; 
  new_node = (struct node_st*)malloc(sizeof(struct node_st));

  new_node->data = num; 
  new_node->next = NULL;

  /* Special case for the head end */
  if (l == NULL || l->data >= new_node->data) 
  { 
    new_node->next = l; 
    l = new_node; 
  } else { 
    /* Locate the node before the point of insertion */
    current = l; 
    while (current->next!=NULL && current->next->data < new_node->data) 
    { 
      current = current->next; 
    } 
    new_node->next = current->next;
    current->next = new_node; 
  } 
  current = l; 
  while(current != NULL)
  {
    printf("Node data: %d\n", current->data);
    current = current->next;
  }
  return l; 

}

int main() 
{ 
  struct node_st* head = NULL; 
  struct node_st* second = NULL; 
  struct node_st* third = NULL; 

  head = (struct node_st*)malloc(sizeof(struct node_st)); 
  second = (struct node_st*)malloc(sizeof(struct node_st)); 
  third = (struct node_st*)malloc(sizeof(struct node_st)); 

  head->data = 3; 
  head->next = second; 
  second->data = 8; 
  second->next = third; 
  third->data = 9; 
  third->next = NULL; 

  sorted_insert_node(head, 1);

  return 0; 
} 
