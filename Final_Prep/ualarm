#include <stdio.h>
#include <stdlib.h>
#include <signal.h>
#include <string.h>
#include <sys/time.h>

void timer_handler (int signum)
{
   pause();
}

long ualarm(long usec) 
{
  struct sigaction sa;
   struct itimerval timer;

   memset(&sa, 0, sizeof (sa));

   sa.sa_handler = &timer_handler ;
   sigaction (SIGALRM, &sa, NULL );

   timer.it_value.tv_sec = 0 ;
   timer.it_value.tv_usec = usec;
   timer.it_interval.tv_sec = 0;
   timer.it_interval.tv_usec = usec ;

   setitimer (ITIMER_REAL, &timer, NULL);
   return(timer.it_value.tv_usec);
}

int main (int args, char *argv[])
{
  long usec = 10; 
  printf("%ld \n", ualarm(usec));
  return 0; 
}


/*
int main ()
{ 
   struct sigaction sa;
   struct itimerval timer;

   memset(&sa, 0, sizeof (sa));

   sa.sa_handler = &timer_handler ;
   sigaction (SIGALRM, &sa, NULL );

   timer.it_value.tv_sec = 0 ;
   timer.it_value.tv_usec = 100000;
   timer.it_interval.tv_sec = 0;
   timer.it_interval.tv_usec = 100000 ;

   setitimer (ITIMER_REAL, &timer, NULL) ;
   pause();
   return 0; 
}
*/

